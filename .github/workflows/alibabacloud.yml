# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images.
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME.
#

name: Build and Deploy to ACK

on:
  push:
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-chengdu
  REGISTRY: registry.cn-chengdu.aliyuncs.com
  NAMESPACE: namespace
  IMAGE: repo
  TAG: ${{ github.sha }}
  ACK_CLUSTER_ID: clusterID
  ACK_DEPLOYMENT_NAME: nginx-deployment

  ACR_EE_REGISTRY: myregistry.cn-chengdu.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: instanceID
  ACR_EE_NAMESPACE: namespace
  ACR_EE_IMAGE: repo
  ACR_EE_TAG: ${{ github.sha }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # 1.1 Login to ACR
    - uses: actions/checkout@v1
    - uses: jerray/setup-aliyun-cli-action@v1.0.0
      with:
        aliyun-cli-version: '3.0.165'
        mode: AK
        access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
        region: ${{ env.REGION_ID }}
    - run: pwd

#    - name: Login to ACR with the AccessKey pair
#      uses: aliyun/acr-login@v1
#      with:
#        login-server: "${{ env.REGISTRY }}"
#        region-id: "${{ env.REGION_ID }}"
#        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
#        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"

   #2. 安装nvm
    - name: nvm action setup
      uses: actions/setup-node@v2
      with:
        node-version: "${{secrets.NODE_VERSION}}"
   #2. git
    - name: Set up Git
      run: |
        git config user.email "1364952827@qq.com"
        git config user.name "ZZL"
        git status
   #3. 构建代码 生成dist文件
    - name: Build
      run: |
        npm install
        npm run build
   #4. 转发到apache 的html目录下
    - name: Deploy
      run: |
        sudo cp -r dist/* "${{secrets.APACHE_HTML_PATH}}}"
